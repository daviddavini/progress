|	"preface"	#nameddest=G4.96723
|	"acknowledgments"	#nameddest=G4.96731
+	"about this book"	#nameddest=G4.96740
|		"Who should read this book"	#nameddest=G4.96743
|		"How this book is organized: a roadmap"	#nameddest=G4.96748
|		"About the code"	#nameddest=G4.96772
|		"Book forum"	#nameddest=G4.96780
|		"Other online resources"	#nameddest=G4.96785
|	"about the author"	#nameddest=G4.96802
|	"about the cover illustration"	#nameddest=G4.96807
-	"Part 1 Overview"	#page=33&view=Fit
+		"1 Introducing Kubernetes"	#nameddest=G5.1049350
+			"1.1 Understanding the need for a system like Kubernetes"	#nameddest=G5.1049366
|				"1.1.1 Moving from monolithic apps to microservices"	#nameddest=G5.1049370
|				"1.1.2 Providing a consistent environment to applications"	#nameddest=G5.1049434
|				"1.1.3 Moving to continuous delivery: DevOps and NoOps"	#nameddest=G5.1049445
+			"1.2 Introducing container technologies"	#nameddest=G5.1049474
|				"1.2.1 Understanding what containers are"	#nameddest=G5.1049482
|				"1.2.2 Introducing the Docker container platform"	#nameddest=G5.1049567
|				"1.2.3 Introducing rktâ€”an alternative to Docker"	#nameddest=G5.1049653
+			"1.3 Introducing Kubernetes"	#nameddest=G5.1049669
|				"1.3.1 Understanding its origins"	#nameddest=G5.1049672
|				"1.3.2 Looking at Kubernetes from the top of a mountain"	#nameddest=G5.1049679
|				"1.3.3 Understanding the architecture of a Kubernetes cluster"	#nameddest=G5.1049703
|				"1.3.4 Running an application in Kubernetes"	#nameddest=G5.1049755
|				"1.3.5 Understanding the benefits of using Kubernetes"	#nameddest=G5.1049809
|			"1.4 Summary"	#nameddest=G5.1049860
+		"2 First steps with Docker and Kubernetes"	#nameddest=G6.1051248
+			"2.1 Creating, running, and sharing a container image"	#nameddest=G6.1051258
|				"2.1.1 Installing Docker and running a Hello World container"	#nameddest=G6.1051266
|				"2.1.2 Creating a trivial Node.js app"	#nameddest=G6.1051328
|				"2.1.3 Creating a Dockerfile for the image"	#nameddest=G6.1051357
|				"2.1.4 Building the container image"	#nameddest=G6.1051375
|				"2.1.5 Running the container image"	#nameddest=G6.1051429
|				"2.1.6 Exploring the inside of a running container"	#nameddest=G6.1051477
|				"2.1.7 Stopping and removing a container"	#nameddest=G6.1051543
|				"2.1.8 Pushing the image to an image registry"	#nameddest=G6.1051566
+			"2.2 Setting up a Kubernetes cluster"	#nameddest=G6.1051630
|				"2.2.1 Running a local single-node Kubernetes cluster with Minikube"	#nameddest=G6.1051642
|				"2.2.2 Using a hosted Kubernetes cluster with Google Kubernetes Engine"	#nameddest=G6.1051711
|				"2.2.3 Setting up an alias and command-line completion for kubectl"	#nameddest=G6.1051799
+			"2.3 Running your first app on Kubernetes"	#nameddest=G6.1051845
|				"2.3.1 Deploying your Node.js app"	#nameddest=G6.1051847
|				"2.3.2 Accessing your web application"	#nameddest=G6.1051920
|				"2.3.3 The logical parts of your system"	#nameddest=G6.1051981
|				"2.3.4 Horizontally scaling the application"	#nameddest=G6.1052015
|				"2.3.5 Examining what nodes your app is running on"	#nameddest=G6.1052094
|				"2.3.6 Introducing the Kubernetes dashboard"	#nameddest=G6.1052149
|			"2.4 Summary"	#nameddest=G6.1052197
-	"Part 2 Core concepts"	#page=87&view=Fit
+		"3 Pods: running containers in Kubernetes"	#nameddest=G7.1056370
+			"3.1 Introducing pods"	#nameddest=G7.1056380
|				"3.1.1 Understanding why we need pods"	#nameddest=G7.1056388
|				"3.1.2 Understanding pods"	#nameddest=G7.1056403
|				"3.1.3 Organizing containers across pods properly"	#nameddest=G7.1056452
+			"3.2 Creating pods from YAML or JSON descriptors"	#nameddest=G7.1056524
|				"3.2.1 Examining a YAML descriptor of an existing pod"	#nameddest=G7.1056533
|				"3.2.2 Creating a simple YAML descriptor for a pod"	#nameddest=G7.1056627
|				"3.2.3 Using kubectl create to create the pod"	#nameddest=G7.1056713
|				"3.2.4 Viewing application logs"	#nameddest=G7.1056749
|				"3.2.5 Sending requests to the pod"	#nameddest=G7.1056796
+			"3.3 Organizing pods with labels"	#nameddest=G7.1056850
|				"3.3.1 Introducing labels"	#nameddest=G7.1056863
|				"3.3.2 Specifying labels when creating a pod"	#nameddest=G7.1056884
|				"3.3.3 Modifying labels of existing pods"	#nameddest=G7.1056925
+			"3.4 Listing subsets of pods through label selectors"	#nameddest=G7.1056954
|				"3.4.1 Listing pods using a label selector"	#nameddest=G7.1056964
|				"3.4.2 Using multiple conditions in a label selector"	#nameddest=G7.1057001
+			"3.5 Using labels and selectors to constrain pod scheduling"	#nameddest=G7.1057023
|				"3.5.1 Using labels for categorizing worker nodes"	#nameddest=G7.1057035
|				"3.5.2 Scheduling pods to specific nodes"	#nameddest=G7.1057065
|				"3.5.3 Scheduling to one specific node"	#nameddest=G7.1057102
+			"3.6 Annotating pods"	#nameddest=G7.1057132
|				"3.6.1 Looking up an object's annotations"	#nameddest=G7.1057139
|				"3.6.2 Adding and modifying annotations"	#nameddest=G7.1057163
+			"3.7 Using namespaces to group resources"	#nameddest=G7.1057191
|				"3.7.1 Understanding the need for namespaces"	#nameddest=G7.1057198
|				"3.7.2 Discovering other namespaces and their pods"	#nameddest=G7.1057207
|				"3.7.3 Creating a namespace"	#nameddest=G7.1057234
|				"3.7.4 Managing objects in other namespaces"	#nameddest=G7.1057270
|				"3.7.5 Understanding the isolation provided by namespaces"	#nameddest=G7.1057286
+			"3.8 Stopping and removing pods"	#nameddest=G7.1057299
|				"3.8.1 Deleting a pod by name"	#nameddest=G7.1057305
|				"3.8.2 Deleting pods using label selectors"	#nameddest=G7.1057321
|				"3.8.3 Deleting pods by deleting the whole namespace"	#nameddest=G7.1057344
|				"3.8.4 Deleting all pods in a namespace, while keeping the namespace"	#nameddest=G7.1057358
|				"3.8.5 Deleting (almost) all resources in a namespace"	#nameddest=G7.1057385
|			"3.9 Summary"	#nameddest=G7.1057413
+		"4 Replication and other controllers: deploying managed pods"	#nameddest=G8.1068745
+			"4.1 Keeping pods healthy"	#nameddest=G8.1068757
|				"4.1.1 Introducing liveness probes"	#nameddest=G8.1068764
|				"4.1.2 Creating an HTTP-based liveness probe"	#nameddest=G8.1068777
|				"4.1.3 Seeing a liveness probe in action"	#nameddest=G8.1068806
|				"4.1.4 Configuring additional properties of the liveness probe"	#nameddest=G8.1068854
|				"4.1.5 Creating effective liveness probes"	#nameddest=G8.1068878
+			"4.2 Introducing ReplicationControllers"	#nameddest=G8.1068908
|				"4.2.1 The operation of a ReplicationController"	#nameddest=G8.1068918
|				"4.2.2 Creating a ReplicationController"	#nameddest=G8.1068977
|				"4.2.3 Seeing the ReplicationController in action"	#nameddest=G8.1069016
|				"4.2.4 Moving pods in and out of the scope of a ReplicationController"	#nameddest=G8.1069134
|				"4.2.5 Changing the pod template"	#nameddest=G8.1069216
|				"4.2.6 Horizontally scaling pods"	#nameddest=G8.1069242
|				"4.2.7 Deleting a ReplicationController"	#nameddest=G8.1069323
+			"4.3 Using ReplicaSets instead of ReplicationControllers"	#nameddest=G8.1069341
|				"4.3.1 Comparing a ReplicaSet to a ReplicationController"	#nameddest=G8.1069346
|				"4.3.2 Defining a ReplicaSet"	#nameddest=G8.1069356
|				"4.3.3 Creating and examining a ReplicaSet"	#nameddest=G8.1069393
|				"4.3.4 Using the ReplicaSet's more expressive label selectors"	#nameddest=G8.1069417
|				"4.3.5 Wrapping up ReplicaSets"	#nameddest=G8.1069446
+			"4.4 Running exactly one pod on each node with DaemonSets"	#nameddest=G8.1069453
|				"4.4.1 Using a DaemonSet to run a pod on every node"	#nameddest=G8.1069465
|				"4.4.2 Using a DaemonSet to run pods only on certain nodes"	#nameddest=G8.1069476
+			"4.5 Running pods that perform a single completable task"	#nameddest=G8.1069587
|				"4.5.1 Introducing the Job resource"	#nameddest=G8.1069590
|				"4.5.2 Defining a Job resource"	#nameddest=G8.1069607
|				"4.5.3 Seeing a Job run a pod"	#nameddest=G8.1069636
|				"4.5.4 Running multiple pod instances in a Job"	#nameddest=G8.1069663
|				"4.5.5 Limiting the time allowed for a Job pod to complete"	#nameddest=G8.1069718
+			"4.6 Scheduling Jobs to run periodically or once in the future"	#nameddest=G8.1069723
|				"4.6.1 Creating a CronJob"	#nameddest=G8.1069733
|				"4.6.2 Understanding how scheduled jobs are run"	#nameddest=G8.1069790
|			"4.7 Summary"	#nameddest=G8.1069810
+		"5 Services: enabling clients to discover and talk to pods"	#nameddest=G9.1075984
+			"5.1 Introducing services"	#nameddest=G9.1076000
|				"5.1.1 Creating services"	#nameddest=G9.1076017
|				"5.1.2 Discovering services"	#nameddest=G9.1076209
+			"5.2 Connecting to services living outside the cluster"	#nameddest=G9.1076326
|				"5.2.1 Introducing service endpoints"	#nameddest=G9.1076332
|				"5.2.2 Manually configuring service endpoints"	#nameddest=G9.1076362
|				"5.2.3 Creating an alias for an external service"	#nameddest=G9.1076432
+			"5.3 Exposing services to external clients"	#nameddest=G9.1076470
|				"5.3.1 Using a NodePort service"	#nameddest=G9.1076490
|				"5.3.2 Exposing a service through an external load balancer"	#nameddest=G9.1076584
|				"5.3.3 Understanding the peculiarities of external connections"	#nameddest=G9.1076647
+			"5.4 Exposing services externally through an Ingress resource"	#nameddest=G9.1076695
|				"5.4.1 Creating an Ingress resource"	#nameddest=G9.1076755
|				"5.4.2 Accessing the service through the Ingress"	#nameddest=G9.1076782
|				"5.4.3 Exposing multiple services through the same Ingress"	#nameddest=G9.1076845
|				"5.4.4 Configuring Ingress to handle TLS traffic"	#nameddest=G9.1076916
+			"5.5 Signaling when a pod is ready to accept connections"	#nameddest=G9.1076992
|				"5.5.1 Introducing readiness probes"	#nameddest=G9.1076999
|				"5.5.2 Adding a readiness probe to a pod"	#nameddest=G9.1077038
|				"5.5.3 Understanding what real-world readiness probes should do"	#nameddest=G9.1077128
+			"5.6 Using a headless service for discovering individual pods"	#nameddest=G9.1077158
|				"5.6.1 Creating a headless service"	#nameddest=G9.1077166
|				"5.6.2 Discovering pods through DNS"	#nameddest=G9.1077188
|				"5.6.3 Discovering all podsâ€”even those that aren't ready"	#nameddest=G9.1077233
|			"5.7 Troubleshooting services"	#nameddest=G9.1077247
|			"5.8 Summary"	#nameddest=G9.1077263
+		"6 Volumes: attaching disk storage to containers"	#nameddest=G10.1084028
+			"6.1 Introducing volumes"	#nameddest=G10.1084045
|				"6.1.1 Explaining volumes in an example"	#nameddest=G10.1084048
|				"6.1.2 Introducing available volume types"	#nameddest=G10.1084074
+			"6.2 Using volumes to share data between containers"	#nameddest=G10.1084111
|				"6.2.1 Using an emptyDir volume"	#nameddest=G10.1084116
|				"6.2.2 Using a Git repository as the starting point for a volume"	#nameddest=G10.1084236
+			"6.3 Accessing files on the worker node's filesystem"	#nameddest=G10.1084342
|				"6.3.1 Introducing the hostPath volume"	#nameddest=G10.1084349
|				"6.3.2 Examining system pods that use hostPath volumes"	#nameddest=G10.1084367
+			"6.4 Using persistent storage"	#nameddest=G10.1084407
|				"6.4.1 Using a GCE Persistent Disk in a pod volume"	#nameddest=G10.1084415
|				"6.4.2 Using other types of volumes with underlying persistent storage"	#nameddest=G10.1084568
+			"6.5 Decoupling pods from the underlying storage technology"	#nameddest=G10.1084635
|				"6.5.1 Introducing PersistentVolumes and PersistentVolumeClaims"	#nameddest=G10.1084643
|				"6.5.2 Creating a PersistentVolume"	#nameddest=G10.1084675
|				"6.5.3 Claiming a PersistentVolume by creating a PersistentVolumeClaim"	#nameddest=G10.1084733
|				"6.5.4 Using a PersistentVolumeClaim in a pod"	#nameddest=G10.1084812
|				"6.5.5 Understanding the benefits of using PersistentVolumes and claims"	#nameddest=G10.1084858
|				"6.5.6 Recycling PersistentVolumes"	#nameddest=G10.1084887
+			"6.6 Dynamic provisioning of PersistentVolumes"	#nameddest=G10.1084942
|				"6.6.1 Defining the available storage types through StorageClass resources"	#nameddest=G10.1084951
|				"6.6.2 Requesting the storage class in a PersistentVolumeClaim"	#nameddest=G10.1084979
|				"6.6.3 Dynamic provisioning without specifying a storage class"	#nameddest=G10.1085054
|			"6.7 Summary"	#nameddest=G10.1085181
+		"7 ConfigMaps and Secrets: configuring applications"	#nameddest=G11.1091333
|			"7.1 Configuring containerized applications"	#nameddest=G11.1091341
+			"7.2 Passing command-line arguments to containers"	#nameddest=G11.1091358
|				"7.2.1 Defining the command and arguments in Docker"	#nameddest=G11.1091362
|				"7.2.2 Overriding the command and arguments in Kubernetes"	#nameddest=G11.1091512
+			"7.3 Setting environment variables for a container"	#nameddest=G11.1091592
|				"7.3.1 Specifying environment variables in a container definition"	#nameddest=G11.1091628
|				"7.3.2 Referring to other environment variables in a variable's value"	#nameddest=G11.1091649
|				"7.3.3 Understanding the drawback of hardcoding environment variables"	#nameddest=G11.1091671
+			"7.4 Decoupling configuration with a ConfigMap"	#nameddest=G11.1091682
|				"7.4.1 Introducing ConfigMaps"	#nameddest=G11.1091687
|				"7.4.2 Creating a ConfigMap"	#nameddest=G11.1091707
|				"7.4.3 Passing a ConfigMap entry to a container as an environment variable"	#nameddest=G11.1091798
|				"7.4.4 Passing all entries of a ConfigMap as environment variables at once"	#nameddest=G11.1091853
|				"7.4.5 Passing a ConfigMap entry as a command-line argument"	#nameddest=G11.1091883
|				"7.4.6 Using a configMap volume to expose ConfigMap entries as files"	#nameddest=G11.1091921
|				"7.4.7 Updating an app's config without having to restart the app"	#nameddest=G11.1092144
+			"7.5 Using Secrets to pass sensitive data to containers"	#nameddest=G11.1092219
|				"7.5.1 Introducing Secrets"	#nameddest=G11.1092224
|				"7.5.2 Introducing the default token Secret"	#nameddest=G11.1092239
|				"7.5.3 Creating a Secret"	#nameddest=G11.1092294
|				"7.5.4 Comparing ConfigMaps and Secrets"	#nameddest=G11.1092314
|				"7.5.5 Using the Secret in a pod"	#nameddest=G11.1092388
|				"7.5.6 Understanding image pull Secrets"	#nameddest=G11.1092570
|			"7.6 Summary"	#nameddest=G11.1092642
+		"8 Accessing pod metadata and other resources from applications"	#nameddest=G12.1099473
+			"8.1 Passing metadata through the Downward API"	#nameddest=G12.1099482
|				"8.1.1 Understanding the available metadata"	#nameddest=G12.1099492
|				"8.1.2 Exposing metadata through environment variables"	#nameddest=G12.1099511
|				"8.1.3 Passing metadata through files in a downwardAPI volume"	#nameddest=G12.1099601
+			"8.2 Talking to the Kubernetes API server"	#nameddest=G12.1099766
|				"8.2.1 Exploring the Kubernetes REST API"	#nameddest=G12.1099776
|				"8.2.2 Talking to the API server from within a pod"	#nameddest=G12.1099970
|				"8.2.3 Simplifying API server communication with ambassador containers"	#nameddest=G12.1100130
|				"8.2.4 Using client libraries to talk to the API server"	#nameddest=G12.1100202
|			"8.3 Summary"	#nameddest=G12.1100328
+		"9 Deployments: updating applications declaratively"	#nameddest=G13.1104876
+			"9.1 Updating applications running in pods"	#nameddest=G13.1104888
|				"9.1.1 Deleting old pods and replacing them with new ones"	#nameddest=G13.1104906
|				"9.1.2 Spinning up new pods and then deleting the old ones"	#nameddest=G13.1104931
+			"9.2 Performing an automatic rolling update with a ReplicationController"	#nameddest=G13.1104990
|				"9.2.1 Running the initial version of the app"	#nameddest=G13.1104995
|				"9.2.2 Performing a rolling update with kubectl"	#nameddest=G13.1105083
|				"9.2.3 Understanding why kubectl rolling-update is now obsolete"	#nameddest=G13.1105194
+			"9.3 Using Deployments for updating apps declaratively"	#nameddest=G13.1105221
|				"9.3.1 Creating a Deployment"	#nameddest=G13.1105237
|				"9.3.2 Updating a Deployment"	#nameddest=G13.1105320
|				"9.3.3 Rolling back a deployment"	#nameddest=G13.1105443
|				"9.3.4 Controlling the rate of the rollout"	#nameddest=G13.1105574
|				"9.3.5 Pausing the rollout process"	#nameddest=G13.1105643
|				"9.3.6 Blocking rollouts of bad versions"	#nameddest=G13.1105686
|			"9.4 Summary"	#nameddest=G13.1105850
+		"10 StatefulSets: deploying replicated stateful applications"	#nameddest=G14.1110476
+			"10.1 Replicating stateful pods"	#nameddest=G14.1110485
|				"10.1.1 Running multiple replicas with separate storage for each"	#nameddest=G14.1110498
|				"10.1.2 Providing a stable identity for each pod"	#nameddest=G14.1110554
+			"10.2 Understanding StatefulSets"	#nameddest=G14.1110590
|				"10.2.1 Comparing StatefulSets with ReplicaSets"	#nameddest=G14.1110593
|				"10.2.2 Providing a stable network identity"	#nameddest=G14.1110624
|				"10.2.3 Providing stable dedicated storage to each stateful instance"	#nameddest=G14.1110679
|				"10.2.4 Understanding StatefulSet guarantees"	#nameddest=G14.1110745
+			"10.3 Using a StatefulSet"	#nameddest=G14.1110778
|				"10.3.1 Creating the app and container image"	#nameddest=G14.1110781
|				"10.3.2 Deploying the app through a StatefulSet"	#nameddest=G14.1110828
|				"10.3.3 Playing with your pods"	#nameddest=G14.1111032
+			"10.4 Discovering peers in a StatefulSet"	#nameddest=G14.1111168
|				"10.4.1 Implementing peer discovery through DNS"	#nameddest=G14.1111205
|				"10.4.2 Updating a StatefulSet"	#nameddest=G14.1111279
|				"10.4.3 Trying out your clustered data store"	#nameddest=G14.1111300
+			"10.5 Understanding how StatefulSets deal with node failures"	#nameddest=G14.1111331
|				"10.5.1 Simulating a node's disconnection from the network"	#nameddest=G14.1111341
|				"10.5.2 Deleting the pod manually"	#nameddest=G14.1111430
|			"10.6 Summary"	#nameddest=G14.1111489
-	"Part 3 Beyond the basics"	#page=341&view=Fit
+		"11 Understanding Kubernetes internals"	#nameddest=G15.1115338
+			"11.1 Understanding the architecture"	#nameddest=G15.1115349
|				"11.1.1 The distributed nature of Kubernetes components"	#nameddest=G15.1115401
|				"11.1.2 How Kubernetes uses etcd"	#nameddest=G15.1115473
|				"11.1.3 What the API server does"	#nameddest=G15.1115558
|				"11.1.4 Understanding how the API server notifies clients of resource changes"	#nameddest=G15.1115633
|				"11.1.5 Understanding the Scheduler"	#nameddest=G15.1115669
|				"11.1.6 Introducing the controllers running in the Controller Manager"	#nameddest=G15.1115736
|				"11.1.7 What the Kubelet does"	#nameddest=G15.1115864
|				"11.1.8 The role of the Kubernetes Service Proxy"	#nameddest=G15.1115891
|				"11.1.9 Introducing Kubernetes add-ons"	#nameddest=G15.1115926
|				"11.1.10 Bringing it all together"	#nameddest=G15.1115971
+			"11.2 How controllers cooperate"	#nameddest=G15.1115980
|				"11.2.1 Understanding which components are involved"	#nameddest=G15.1115983
|				"11.2.2 The chain of events"	#nameddest=G15.1115994
|				"11.2.3 Observing cluster events"	#nameddest=G15.1116045
|			"11.3 Understanding what a running pod is"	#nameddest=G15.1116087
+			"11.4 Inter-pod networking"	#nameddest=G15.1116114
|				"11.4.1 What the network must be like"	#nameddest=G15.1116120
|				"11.4.2 Diving deeper into how networking works"	#nameddest=G15.1116140
|				"11.4.3 Introducing the Container Network Interface"	#nameddest=G15.1116188
+			"11.5 How services are implemented"	#nameddest=G15.1116206
|				"11.5.1 Introducing the kube-proxy"	#nameddest=G15.1116210
|				"11.5.2 How kube-proxy uses iptables"	#nameddest=G15.1116222
+			"11.6 Running highly available clusters"	#nameddest=G15.1116253
|				"11.6.1 Making your apps highly available"	#nameddest=G15.1116256
|				"11.6.2 Making Kubernetes Control Plane components highly available"	#nameddest=G15.1116278
|			"11.7 Summary"	#nameddest=G15.1116367
+		"12 Securing the Kubernetes API server"	#nameddest=G16.1119204
+			"12.1 Understanding authentication"	#nameddest=G16.1119217
|				"12.1.1 Users and groups"	#nameddest=G16.1119229
|				"12.1.2 Introducing ServiceAccounts"	#nameddest=G16.1119277
|				"12.1.3 Creating ServiceAccounts"	#nameddest=G16.1119315
|				"12.1.4 Assigning a ServiceAccount to a pod"	#nameddest=G16.1119383
+			"12.2 Securing the cluster with role-based access control"	#nameddest=G16.1119454
|				"12.2.1 Introducing the RBAC authorization plugin"	#nameddest=G16.1119468
|				"12.2.2 Introducing RBAC resources"	#nameddest=G16.1119550
|				"12.2.3 Using Roles and RoleBindings"	#nameddest=G16.1119641
|				"12.2.4 Using ClusterRoles and ClusterRoleBindings"	#nameddest=G16.1119804
|				"12.2.5 Understanding default ClusterRoles and ClusterRoleBindings"	#nameddest=G16.1120163
|				"12.2.6 Granting authorization permissions wisely"	#nameddest=G16.1120267
|			"12.3 Summary"	#nameddest=G16.1120311
+		"13 Securing cluster nodes and the network"	#nameddest=G17.1125315
+			"13.1 Using the host node's namespaces in a pod"	#nameddest=G17.1125330
|				"13.1.1 Using the node's network namespace in a pod"	#nameddest=G17.1125341
|				"13.1.2 Binding to a host port without using the host's network namespace"	#nameddest=G17.1125391
|				"13.1.3 Using the node's PID and IPC namespaces"	#nameddest=G17.1125437
+			"13.2 Configuring the container's security context"	#nameddest=G17.1125494
|				"13.2.1 Running a container as a specific user"	#nameddest=G17.1125536
|				"13.2.2 Preventing a container from running as root"	#nameddest=G17.1125563
|				"13.2.3 Running pods in privileged mode"	#nameddest=G17.1125593
|				"13.2.4 Adding individual kernel capabilities to a container"	#nameddest=G17.1125647
|				"13.2.5 Dropping capabilities from a container"	#nameddest=G17.1125694
|				"13.2.6 Preventing processes from writing to the container's filesystem"	#nameddest=G17.1125728
|				"13.2.7 Sharing volumes when containers run as different users"	#nameddest=G17.1125781
+			"13.3 Restricting the use of security-related features in pods"	#nameddest=G17.1125864
|				"13.3.1 Introducing the PodSecurityPolicy resource"	#nameddest=G17.1125873
|				"13.3.2 Understanding runAsUser, fsGroup, and supplementalGroups policies"	#nameddest=G17.1125962
|				"13.3.3 Configuring allowed, default, and disallowed capabilities"	#nameddest=G17.1126079
|				"13.3.4 Constraining the types of volumes pods can use"	#nameddest=G17.1126201
|				"13.3.5 Assigning different PodSecurityPolicies to different users and groups"	#nameddest=G17.1126223
+			"13.4 Isolating the pod network"	#nameddest=G17.1126363
|				"13.4.1 Enabling network isolation in a namespace"	#nameddest=G17.1126374
|				"13.4.2 Allowing only some pods in the namespace to connect to a server pod"	#nameddest=G17.1126399
|				"13.4.3 Isolating the network between Kubernetes namespaces"	#nameddest=G17.1126434
|				"13.4.4 Isolating using CIDR notation"	#nameddest=G17.1137899
|				"13.4.5 Limiting the outbound traffic of a set of pods"	#nameddest=G17.1137907
|			"13.5 Summary"	#nameddest=G17.1126477
+		"14 Managing pods' computational resources"	#nameddest=G18.1132427
+			"14.1 Requesting resources for a pod's containers"	#nameddest=G18.1132436
|				"14.1.1 Creating pods with resource requests"	#nameddest=G18.1132443
|				"14.1.2 Understanding how resource requests affect scheduling"	#nameddest=G18.1132485
|				"14.1.3 Understanding how CPU requests affect CPU time sharing"	#nameddest=G18.1132666
|				"14.1.4 Defining and requesting custom resources"	#nameddest=G18.1132685
+			"14.2 Limiting resources available to a container"	#nameddest=G18.1132710
|				"14.2.1 Setting a hard limit for the amount of resources a container can use"	#nameddest=G18.1132716
|				"14.2.2 Exceeding the limits"	#nameddest=G18.1132780
|				"14.2.3 Understanding how apps in containers see limits"	#nameddest=G18.1132828
+			"14.3 Understanding pod QoS classes"	#nameddest=G18.1132892
|				"14.3.1 Defining the QoS class for a pod"	#nameddest=G18.1132903
|				"14.3.2 Understanding which process gets killed when memory is low"	#nameddest=G18.1133005
+			"14.4 Setting default requests and limits for pods per namespace"	#nameddest=G18.1133051
|				"14.4.1 Introducing the LimitRange resource"	#nameddest=G18.1133061
|				"14.4.2 Creating a LimitRange object"	#nameddest=G18.1133082
|				"14.4.3 Enforcing the limits"	#nameddest=G18.1133145
|				"14.4.4 Applying default resource requests and limits"	#nameddest=G18.1133167
+			"14.5 Limiting the total resources available in a namespace"	#nameddest=G18.1133205
|				"14.5.1 Introducing the ResourceQuota object"	#nameddest=G18.1133211
|				"14.5.2 Specifying a quota for persistent storage"	#nameddest=G18.1133275
|				"14.5.3 Limiting the number of objects that can be created"	#nameddest=G18.1133305
|				"14.5.4 Specifying quotas for specific pod states and/or QoS classes"	#nameddest=G18.1133346
+			"14.6 Monitoring pod resource usage"	#nameddest=G18.1133401
|				"14.6.1 Collecting and retrieving actual resource usages"	#nameddest=G18.1133409
|				"14.6.2 Storing and analyzing historical resource consumption statistics"	#nameddest=G18.1133562
|			"14.7 Summary"	#nameddest=G18.1133694
+		"15 Automatic scaling of pods and cluster nodes"	#nameddest=G19.1139795
+			"15.1 Horizontal pod autoscaling"	#nameddest=G19.1139804
|				"15.1.1 Understanding the autoscaling process"	#nameddest=G19.1139809
|				"15.1.2 Scaling based on CPU utilization"	#nameddest=G19.1139891
|				"15.1.3 Scaling based on memory consumption"	#nameddest=G19.1140104
|				"15.1.4 Scaling based on other and custom metrics"	#nameddest=G19.1140115
|				"15.1.5 Determining which metrics are appropriate for autoscaling"	#nameddest=G19.1140207
|				"15.1.6 Scaling down to zero replicas"	#nameddest=G19.1140221
+			"15.2 Vertical pod autoscaling"	#nameddest=G19.1140238
|				"15.2.1 Automatically configuring resource requests"	#nameddest=G19.1140244
|				"15.2.2 Modifying resource requests while a pod is running"	#nameddest=G19.1140257
+			"15.3 Horizontal scaling of cluster nodes"	#nameddest=G19.1140274
|				"15.3.1 Introducing the Cluster Autoscaler"	#nameddest=G19.1140281
|				"15.3.2 Enabling the Cluster Autoscaler"	#nameddest=G19.1140325
|				"15.3.3 Limiting service disruption during cluster scale-down"	#nameddest=G19.1140354
|			"15.4 Summary"	#nameddest=G19.1140407
+		"16 Advanced scheduling"	#nameddest=G20.1143525
+			"16.1 Using taints and tolerations to repel pods from certain nodes"	#nameddest=G20.1143533
|				"16.1.1 Introducing taints and tolerations"	#nameddest=G20.1143546
|				"16.1.2 Adding custom taints to a node"	#nameddest=G20.1143624
|				"16.1.3 Adding tolerations to pods"	#nameddest=G20.1143651
|				"16.1.4 Understanding what taints and tolerations can be used for"	#nameddest=G20.1143691
+			"16.2 Using node affinity to attract pods to certain nodes"	#nameddest=G20.1143764
|				"16.2.1 Specifying hard node affinity rules"	#nameddest=G20.1143820
|				"16.2.2 Prioritizing nodes when scheduling a pod"	#nameddest=G20.1143896
+			"16.3 Co-locating pods with pod affinity and anti-affinity"	#nameddest=G20.1144024
|				"16.3.1 Using inter-pod affinity to deploy pods on the same node"	#nameddest=G20.1144035
|				"16.3.2 Deploying pods in the same rack, availability zone, or geographic region"	#nameddest=G20.1144154
|				"16.3.3 Expressing pod affinity preferences instead of hard requirements"	#nameddest=G20.1144238
|				"16.3.4 Scheduling pods away from each other with pod anti-affinity"	#nameddest=G20.1144290
|			"16.4 Summary"	#nameddest=G20.1144367
+		"17 Best practices for developing apps"	#nameddest=G21.1147235
|			"17.1 Bringing everything together"	#nameddest=G21.1147247
+			"17.2 Understanding the pod's lifecycle"	#nameddest=G21.1147266
|				"17.2.1 Applications must expect to be killed and relocated"	#nameddest=G21.1147272
|				"17.2.2 Rescheduling of dead or partially dead pods"	#nameddest=G21.1147361
|				"17.2.3 Starting pods in a specific order"	#nameddest=G21.1147409
|				"17.2.4 Adding lifecycle hooks"	#nameddest=G21.1147471
|				"17.2.5 Understanding pod shutdown"	#nameddest=G21.1147579
+			"17.3 Ensuring all client requests are handled properly"	#nameddest=G21.1147656
|				"17.3.1 Preventing broken client connections when a pod is starting up"	#nameddest=G21.1147663
|				"17.3.2 Preventing broken connections during pod shut-down"	#nameddest=G21.1147678
+			"17.4 Making your apps easy to run and manage in Kubernetes"	#nameddest=G21.1147773
|				"17.4.1 Making manageable container images"	#nameddest=G21.1147779
|				"17.4.2 Properly tagging your images and using imagePullPolicy wisely"	#nameddest=G21.1147792
|				"17.4.3 Using multi-dimensional instead of single-dimensional labels"	#nameddest=G21.1147806
|				"17.4.4 Describing each resource through annotations"	#nameddest=G21.1147821
|				"17.4.5 Providing information on why the process terminated"	#nameddest=G21.1147833
|				"17.4.6 Handling application logs"	#nameddest=G21.1147884
+			"17.5 Best practices for development and testing"	#nameddest=G21.1147951
|				"17.5.1 Running apps outside of Kubernetes during development"	#nameddest=G21.1147957
|				"17.5.2 Using Minikube in development"	#nameddest=G21.1148002
|				"17.5.3 Versioning and auto-deploying resource manifests"	#nameddest=G21.1148083
|				"17.5.4 Introducing Ksonnet as an alternative to writing YAML/JSON manifests"	#nameddest=G21.1148110
|				"17.5.5 Employing Continuous Integration and Continuous Delivery (CI/CD)"	#nameddest=G21.1148154
|			"17.6 Summary"	#nameddest=G21.1148168
+		"18 Extending Kubernetes"	#nameddest=G22.1151886
+			"18.1 Defining custom API objects"	#nameddest=G22.1151895
|				"18.1.1 Introducing CustomResourceDefinitions"	#nameddest=G22.1151901
|				"18.1.2 Automating custom resources with custom controllers"	#nameddest=G22.1152047
|				"18.1.3 Validating custom objects"	#nameddest=G22.1152180
|				"18.1.4 Providing a custom API server for your custom objects"	#nameddest=G22.1152193
+			"18.2 Extending Kubernetes with the Kubernetes Service Catalog"	#nameddest=G22.1152258
|				"18.2.1 Introducing the Service Catalog"	#nameddest=G22.1152263
|				"18.2.2 Introducing the Service Catalog API server and Controller Manager"	#nameddest=G22.1152286
|				"18.2.3 Introducing Service Brokers and the OpenServiceBroker API"	#nameddest=G22.1152301
|				"18.2.4 Provisioning and using a service"	#nameddest=G22.1152395
|				"18.2.5 Unbinding and deprovisioning"	#nameddest=G22.1152511
|				"18.2.6 Understanding what the Service Catalog brings"	#nameddest=G22.1152533
+			"18.3 Platforms built on top of Kubernetes"	#nameddest=G22.1152539
|				"18.3.1 Red Hat OpenShift Container Platform"	#nameddest=G22.1152543
|				"18.3.2 Deis Workflow and Helm"	#nameddest=G22.1152657
|			"18.4 Summary"	#nameddest=G22.1152695
+	"Appendix Aâ€”Using kubectl with multiple clusters"	#nameddest=G23.207134
|		"A.1 Switching between Minikube and Google Kubernetes Engine"	#nameddest=G23.207135
+		"A.2 Using kubectl with multiple clusters or namespaces"	#nameddest=G23.207170
|			"A.2.1 Configuring the location of the kubeconfig file"	#nameddest=G23.207177
|			"A.2.2 Understanding the contents of the kubeconfig file"	#nameddest=G23.207194
|			"A.2.3 Listing, adding, and modifying kube config entries"	#nameddest=G23.207264
|			"A.2.4 Using kubectl with different clusters, users, and contexts"	#nameddest=G23.207378
|			"A.2.5 Switching between contexts"	#nameddest=G23.207397
|			"A.2.6 Listing contexts and clusters"	#nameddest=G23.207413
|			"A.2.7 Deleting contexts and clusters"	#nameddest=G23.207452
+	"Appendix Bâ€”Setting up a multi-node cluster with kubeadm"	#nameddest=G24.208439
+		"B.1 Setting up the OS and required packages"	#nameddest=G24.208443
|			"B.1.1 Creating the virtual machine"	#nameddest=G24.208455
|			"B.1.2 Configuring the network adapter for the VM"	#nameddest=G24.208469
|			"B.1.3 Installing the operating system"	#nameddest=G24.208486
|			"B.1.4 Installing Docker and Kubernetes"	#nameddest=G24.208549
|			"B.1.5 Cloning the VM"	#nameddest=G24.208670
+		"B.2 Configuring the master with kubeadm"	#nameddest=G24.208741
|			"B.2.1 Understanding how kubeadm runs the components"	#nameddest=G24.208773
+		"B.3 Configuring worker nodes with kubeadm"	#nameddest=G24.208828
|			"B.3.1 Setting up the container network"	#nameddest=G24.208858
|		"B.4 Using the cluster from your local machine"	#nameddest=G24.208901
+	"Appendix Câ€”Using other container runtimes"	#nameddest=G25.211247
+		"C.1 Replacing Docker with rkt"	#nameddest=G25.211249
|			"C.1.1 Configuring Kubernetes to use rkt"	#nameddest=G25.211256
|			"C.1.2 Trying out rkt with Minikube"	#nameddest=G25.211268
+		"C.2 Using other container runtimes through the CRI"	#nameddest=G25.211366
|			"C.2.1 Introducing the CRI-O Container Runtime"	#nameddest=G25.211371
|			"C.2.2 Running apps in virtual machines instead of containers"	#nameddest=G25.211380
+	"Appendix Dâ€”Cluster Federation"	#nameddest=G26.211957
|		"D.1 Introducing Kubernetes Cluster Federation"	#nameddest=G26.211963
|		"D.2 Understanding the architecture"	#nameddest=G26.211969
+		"D.3 Understanding federated API objects"	#nameddest=G26.211987
|			"D.3.1 Introducing federated versions of Kubernetes resources"	#nameddest=G26.211992
|			"D.3.2 Understanding what federated resources do"	#nameddest=G26.212017
